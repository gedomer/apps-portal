version: "3"

services:
  db:
    image: postgres
    restart: always
    environment:
      PGDATA: /var/postgres_data
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/postgres_data
  backend:
    build:
      context: ./backend
    command: gunicorn config.wsgi --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./backend:/backend
      - django_media:/backend/media
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=${DEBUG}
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    command: npm start



volumes:
  django_build:
  react_build:
  postgres_data:
  django_media:
